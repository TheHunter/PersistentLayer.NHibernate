Release notes:

New methods to implement on IPagedDAO interfaces:

    /* IPagedDAO<TEntity, TKey> interface */
    -   IPagedResult<TEntity> GetPagedResult(int startIndex, int pageSize, Expression<Func<TEntity, bool>> predicate);

    /* IPagedDAO interface */
    -   IPagedResult<TEntity> GetPagedResult<TEntity>(int startIndex, int pageSize, Expression<Func<TEntity, bool>> predicate)
                where TEntity : class;
            

And the following methods are deprecated and removed permanently:

    /* IPagedDAO<TEntity, TKey> interface */
    -	IPagedResult<TEntity> GetPagedResult(int startIndex, int pageSize, IQueryable<TEntity> query);
	-	IPagedResult<TEntity> GetIndexPagedResult(int pageIndex, int pageSize, IQueryable<TEntity> query);
	
	/* IPagedDAO interface */
	-  IPagedResult<TEntity> GetPagedResult<TEntity>(int startIndex, int pageSize, IQueryable<TEntity> query) where TEntity : class;
	-  IPagedResult<TEntity> GetIndexPagedResult<TEntity>(int pageIndex, int pageSize, IQueryable<TEntity> query) where TEntity : class;


The reason is the IQueryable<TEntity> parameter can be executed outer the PersistentLayer context,
so the caller component could execute directly IQueryable methods.


Interface ITransactionProvider has new methods:
    -   void BeginTransaction();
	-   void BeginTransaction(string name);
	

A new Exception named InvalidIdentifierException.


That's All.



